import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "@/components/ui/sonner";
import NextTopLoader from "nextjs-toploader";
import { AuthProvider } from "@/context/authContext";

// Fonts
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// RootLayout Component
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // const cookieStore = await cookies();
  // const headerList = await headers();
  // const pathname = headerList.get("x-pathname");

  // console.log(pathname);

  // const authToken = cookieStore.get("authToken")?.value;

  // if (authToken) {
  //   try {
  //     const resp = await checkuser(authToken);
  //     if (resp.success) {
  //       console.log(resp);
  //     }
  //   } catch (error) {
  //     console.error("Error verifying user:", error);
  //   } finally {
  //     if (pathname === "/") redirect("/blogs");
  //   }
  // }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Toaster />
        <NextTopLoader />
        <AuthProvider>{children}</AuthProvider>
      </body>
    </html>
  );
}
